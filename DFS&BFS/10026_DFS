
import sys
sys.setrecursionlimit(1000)
r=sys.stdin.readline
n=int(r())
graph=[]
graph = [list(map(str, r().rstrip())) for _ in range(n)]
visit = [[0] * n for _ in range(n)]
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]



def dfs(x,y):
    visit[x][y]=1
    for i in range(4):
        nx = x + dx[i]
        ny = y + dy[i]
        if (0<=nx<n) and (0<=ny<n) and visit[nx][ny]==0 and graph[nx][ny]==c:
            visit[nx][ny]=1
            dfs(nx,ny)
cnt = 0
color=['R','G','B']
for c in color:
    visit = [[0] * n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if visit[i][j]==0 and graph[i][j]==c :
                cnt +=1
                visit[i][j]=1
                dfs(i,j)
for i in range(n):
    for j in range(n):
        if graph[i][j]=='G':
            graph[i][j] =='R'
cntt=0
color=['R','B']
for c in color:
    visit = [[0] * n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if visit[i][j]==0 and graph[i][j]==c :
                cntt +=1
                visit[i][j]=1
                dfs(i,j)

print(cnt,cntt)
