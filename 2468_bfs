import sys
from collections import deque
r = sys.stdin.readline
sys.setrecursionlimit(1000)
n=int(r())
graph=[]
graph = [list(map(int, r().split())) for _ in range(n)]
h = max(max(graph))
dx=[-1,1,0,0]
dy=[0,0,-1,1]

def bfs(x,y):
    q = deque()
    q.append((x,y))
    visit[x][y]=1
    while q:
        x,y = q.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if (0<=nx<n) and (0<=ny<n) and graph[nx][ny]>k and visit[nx][ny]==0:
                visit[nx][ny] = 1
                q.append((nx,ny))
num=1
for k in range(h):
    cnt = 0
    visit = [[0]*n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if graph[i][j]>k and visit[i][j] ==0:
                bfs(i,j)
                cnt += 1
    num = max(num, cnt)
print(num)
